<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.model.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.po.Account">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="PlatformId" jdbcType="INTEGER" property="platformid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="PassWord" jdbcType="VARCHAR" property="password" />
    <result column="RoleType" jdbcType="INTEGER" property="roletype" />
    <result column="AddTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="LastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="Status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, PlatformId, UserId, UserName, PassWord, RoleType, AddTime, LastLoginTime, Status
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.po.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.po.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.po.Account">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account (PlatformId, UserId, UserName, 
      PassWord, RoleType, AddTime, 
      LastLoginTime, Status)
    values (#{platformid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{roletype,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, 
      #{lastlogintime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.po.Account">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="platformid != null">
        PlatformId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        PassWord,
      </if>
      <if test="roletype != null">
        RoleType,
      </if>
      <if test="addtime != null">
        AddTime,
      </if>
      <if test="lastlogintime != null">
        LastLoginTime,
      </if>
      <if test="status != null">
        Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="platformid != null">
        #{platformid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        #{roletype,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.po.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platformid != null">
        PlatformId = #{record.platformid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PassWord = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.roletype != null">
        RoleType = #{record.roletype,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null">
        AddTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastlogintime != null">
        LastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set Id = #{record.id,jdbcType=INTEGER},
      PlatformId = #{record.platformid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      UserName = #{record.username,jdbcType=VARCHAR},
      PassWord = #{record.password,jdbcType=VARCHAR},
      RoleType = #{record.roletype,jdbcType=INTEGER},
      AddTime = #{record.addtime,jdbcType=TIMESTAMP},
      LastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      Status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.po.Account">
    update account
    <set>
      <if test="platformid != null">
        PlatformId = #{platformid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PassWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        RoleType = #{roletype,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        AddTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null">
        LastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        Status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.po.Account">
    update account
    set PlatformId = #{platformid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=INTEGER},
      UserName = #{username,jdbcType=VARCHAR},
      PassWord = #{password,jdbcType=VARCHAR},
      RoleType = #{roletype,jdbcType=INTEGER},
      AddTime = #{addtime,jdbcType=TIMESTAMP},
      LastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      Status = #{status,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>